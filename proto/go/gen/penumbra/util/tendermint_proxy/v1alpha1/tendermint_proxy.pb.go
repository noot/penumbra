// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: penumbra/util/tendermint_proxy/v1alpha1/tendermint_proxy.proto

package tendermint_proxyv1alpha1

import (
	crypto "github.com/penumbra-zone/penumbra/proto/go/gen/tendermint/crypto"
	p2p "github.com/penumbra-zone/penumbra/proto/go/gen/tendermint/p2p"
	types "github.com/penumbra-zone/penumbra/proto/go/gen/tendermint/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetTxRequest is the request type for the GetTx RPC method.
type GetTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash of transaction to retrieve
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Include proofs of the transaction's inclusion in the block
	Prove bool `protobuf:"varint,2,opt,name=prove,proto3" json:"prove,omitempty"`
}

func (x *GetTxRequest) Reset() {
	*x = GetTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxRequest) ProtoMessage() {}

func (x *GetTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxRequest.ProtoReflect.Descriptor instead.
func (*GetTxRequest) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *GetTxRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *GetTxRequest) GetProve() bool {
	if x != nil {
		return x.Prove
	}
	return false
}

// GetTxResponse is the response type for the GetTx RPC method.
type GetTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash of transaction
	Hash     []byte    `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height   uint64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Index    uint64    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	TxResult *TxResult `protobuf:"bytes,4,opt,name=tx_result,json=txResult,proto3" json:"tx_result,omitempty"`
	Tx       []byte    `protobuf:"bytes,5,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *GetTxResponse) Reset() {
	*x = GetTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxResponse) ProtoMessage() {}

func (x *GetTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxResponse.ProtoReflect.Descriptor instead.
func (*GetTxResponse) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *GetTxResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *GetTxResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetTxResponse) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetTxResponse) GetTxResult() *TxResult {
	if x != nil {
		return x.TxResult
	}
	return nil
}

func (x *GetTxResponse) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

type TxResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log       string `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	GasWanted uint64 `protobuf:"varint,2,opt,name=gas_wanted,json=gasWanted,proto3" json:"gas_wanted,omitempty"`
	GasUsed   uint64 `protobuf:"varint,3,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Tags      []*Tag `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TxResult) Reset() {
	*x = TxResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResult) ProtoMessage() {}

func (x *TxResult) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResult.ProtoReflect.Descriptor instead.
func (*TxResult) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *TxResult) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *TxResult) GetGasWanted() uint64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *TxResult) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *TxResult) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Index bool   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *Tag) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Tag) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Tag) GetIndex() bool {
	if x != nil {
		return x.Index
	}
	return false
}

// BroadcastTxAsyncRequest is the request type for the BroadcastTxAsync RPC method.
type BroadcastTxAsyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []byte `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	ReqId  uint64 `protobuf:"varint,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
}

func (x *BroadcastTxAsyncRequest) Reset() {
	*x = BroadcastTxAsyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTxAsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTxAsyncRequest) ProtoMessage() {}

func (x *BroadcastTxAsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTxAsyncRequest.ProtoReflect.Descriptor instead.
func (*BroadcastTxAsyncRequest) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *BroadcastTxAsyncRequest) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *BroadcastTxAsyncRequest) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

// BroadcastTxAsyncResponse is the response type for the BroadcastTxAsync RPC method.
type BroadcastTxAsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Log  string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Hash []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BroadcastTxAsyncResponse) Reset() {
	*x = BroadcastTxAsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTxAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTxAsyncResponse) ProtoMessage() {}

func (x *BroadcastTxAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTxAsyncResponse.ProtoReflect.Descriptor instead.
func (*BroadcastTxAsyncResponse) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *BroadcastTxAsyncResponse) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BroadcastTxAsyncResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BroadcastTxAsyncResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *BroadcastTxAsyncResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// BroadcastTxSyncRequest is the request type for the BroadcastTxSync RPC method.
type BroadcastTxSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []byte `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	ReqId  uint64 `protobuf:"varint,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
}

func (x *BroadcastTxSyncRequest) Reset() {
	*x = BroadcastTxSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTxSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTxSyncRequest) ProtoMessage() {}

func (x *BroadcastTxSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTxSyncRequest.ProtoReflect.Descriptor instead.
func (*BroadcastTxSyncRequest) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *BroadcastTxSyncRequest) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *BroadcastTxSyncRequest) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

// BroadcastTxSyncResponse is the response type for the BroadcastTxSync RPC method.
type BroadcastTxSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Log  string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Hash []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *BroadcastTxSyncResponse) Reset() {
	*x = BroadcastTxSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastTxSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTxSyncResponse) ProtoMessage() {}

func (x *BroadcastTxSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTxSyncResponse.ProtoReflect.Descriptor instead.
func (*BroadcastTxSyncResponse) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *BroadcastTxSyncResponse) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BroadcastTxSyncResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BroadcastTxSyncResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *BroadcastTxSyncResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// GetStatusRequest is the request type for the Query/GetStatus RPC method.
type GetStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{8}
}

// GetStatusResponse is the response type for the Query/GetStatus RPC method.
type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo      *p2p.DefaultNodeInfo `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	SyncInfo      *SyncInfo            `protobuf:"bytes,2,opt,name=sync_info,json=syncInfo,proto3" json:"sync_info,omitempty"`
	ValidatorInfo *types.Validator     `protobuf:"bytes,3,opt,name=validator_info,json=validatorInfo,proto3" json:"validator_info,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *GetStatusResponse) GetNodeInfo() *p2p.DefaultNodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *GetStatusResponse) GetSyncInfo() *SyncInfo {
	if x != nil {
		return x.SyncInfo
	}
	return nil
}

func (x *GetStatusResponse) GetValidatorInfo() *types.Validator {
	if x != nil {
		return x.ValidatorInfo
	}
	return nil
}

type SyncInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestBlockHash   []byte                 `protobuf:"bytes,1,opt,name=latest_block_hash,json=latestBlockHash,proto3" json:"latest_block_hash,omitempty"`
	LatestAppHash     []byte                 `protobuf:"bytes,2,opt,name=latest_app_hash,json=latestAppHash,proto3" json:"latest_app_hash,omitempty"`
	LatestBlockHeight uint64                 `protobuf:"varint,3,opt,name=latest_block_height,json=latestBlockHeight,proto3" json:"latest_block_height,omitempty"`
	LatestBlockTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=latest_block_time,json=latestBlockTime,proto3" json:"latest_block_time,omitempty"`
	// These are implemented in tendermint, but not
	// in tendermint-rpc.
	// bytes earliest_block_hash = 5;
	// bytes earliest_app_hash = 6;
	// uint64 earliest_block_height = 7;
	// google.protobuf.Timestamp earliest_block_time = 8;
	CatchingUp bool `protobuf:"varint,9,opt,name=catching_up,json=catchingUp,proto3" json:"catching_up,omitempty"`
}

func (x *SyncInfo) Reset() {
	*x = SyncInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncInfo) ProtoMessage() {}

func (x *SyncInfo) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncInfo.ProtoReflect.Descriptor instead.
func (*SyncInfo) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *SyncInfo) GetLatestBlockHash() []byte {
	if x != nil {
		return x.LatestBlockHash
	}
	return nil
}

func (x *SyncInfo) GetLatestAppHash() []byte {
	if x != nil {
		return x.LatestAppHash
	}
	return nil
}

func (x *SyncInfo) GetLatestBlockHeight() uint64 {
	if x != nil {
		return x.LatestBlockHeight
	}
	return 0
}

func (x *SyncInfo) GetLatestBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestBlockTime
	}
	return nil
}

func (x *SyncInfo) GetCatchingUp() bool {
	if x != nil {
		return x.CatchingUp
	}
	return false
}

// ABCIQueryRequest defines the request structure for the ABCIQuery gRPC query.
type ABCIQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Height int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Prove  bool   `protobuf:"varint,4,opt,name=prove,proto3" json:"prove,omitempty"`
}

func (x *ABCIQueryRequest) Reset() {
	*x = ABCIQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABCIQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIQueryRequest) ProtoMessage() {}

func (x *ABCIQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIQueryRequest.ProtoReflect.Descriptor instead.
func (*ABCIQueryRequest) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *ABCIQueryRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ABCIQueryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ABCIQueryRequest) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ABCIQueryRequest) GetProve() bool {
	if x != nil {
		return x.Prove
	}
	return false
}

// ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.
//
// Note: This type is a duplicate of the ResponseQuery proto type defined in
// Tendermint.
type ABCIQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Log       string           `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`   // nondeterministic
	Info      string           `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"` // nondeterministic
	Index     int64            `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	Key       []byte           `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte           `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	ProofOps  *crypto.ProofOps `protobuf:"bytes,8,opt,name=proof_ops,json=proofOps,proto3" json:"proof_ops,omitempty"`
	Height    int64            `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Codespace string           `protobuf:"bytes,10,opt,name=codespace,proto3" json:"codespace,omitempty"`
}

func (x *ABCIQueryResponse) Reset() {
	*x = ABCIQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABCIQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIQueryResponse) ProtoMessage() {}

func (x *ABCIQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIQueryResponse.ProtoReflect.Descriptor instead.
func (*ABCIQueryResponse) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *ABCIQueryResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ABCIQueryResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ABCIQueryResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *ABCIQueryResponse) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ABCIQueryResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ABCIQueryResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ABCIQueryResponse) GetProofOps() *crypto.ProofOps {
	if x != nil {
		return x.ProofOps
	}
	return nil
}

func (x *ABCIQueryResponse) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ABCIQueryResponse) GetCodespace() string {
	if x != nil {
		return x.Codespace
	}
	return ""
}

// GetBlockByHeightRequest is the request type for the Query/GetBlockByHeight RPC method.
type GetBlockByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetBlockByHeightRequest) Reset() {
	*x = GetBlockByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightRequest) ProtoMessage() {}

func (x *GetBlockByHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlockByHeightRequest) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method.
type GetBlockByHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId *types.BlockID `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Block   *types.Block   `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *GetBlockByHeightResponse) Reset() {
	*x = GetBlockByHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightResponse) ProtoMessage() {}

func (x *GetBlockByHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP(), []int{14}
}

func (x *GetBlockByHeightResponse) GetBlockId() *types.BlockID {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *GetBlockByHeightResponse) GetBlock() *types.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

var File_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto protoreflect.FileDescriptor

var file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x27, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0xb1, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x4e, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x74, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74,
	0x78, 0x22, 0x98, 0x01, 0x0a, 0x08, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x73, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x61, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x03,
	0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x48, 0x0a, 0x17, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x18, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x47, 0x0a, 0x16, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x54, 0x78, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x22, 0x67,
	0x0a, 0x17, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x53, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2e, 0x70, 0x32, 0x70, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x4e, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xf7, 0x01, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x22, 0x68, 0x0a,
	0x10, 0x41, 0x42, 0x43, 0x49, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x11, 0x41, 0x42, 0x43, 0x49,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x6f,
	0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x4f, 0x70, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x4f, 0x70, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x31, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7f,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x32,
	0xf1, 0x06, 0x0a, 0x16, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75,
	0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x99, 0x01, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54,
	0x78, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x40, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72,
	0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01,
	0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x3f, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x40, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74,
	0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x54, 0x78, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x54, 0x78, 0x12,
	0x35, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72,
	0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x84, 0x01, 0x0a, 0x09, 0x41, 0x42, 0x43, 0x49, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x39,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x42, 0x43, 0x49, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x42, 0x43, 0x49, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x40, 0x2e, 0x70,
	0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0xef, 0x02, 0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x42, 0x14, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x6f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61,
	0x2d, 0x7a, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x3b, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x50,
	0x55, 0x54, 0xaa, 0x02, 0x26, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x55, 0x74,
	0x69, 0x6c, 0x2e, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x26, 0x50, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5c, 0x55, 0x74, 0x69, 0x6c, 0x5c, 0x54, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x5c, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x32, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5c,
	0x55, 0x74, 0x69, 0x6c, 0x5c, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x29, 0x50, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x3a, 0x3a, 0x55, 0x74, 0x69, 0x6c, 0x3a, 0x3a, 0x54, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescOnce sync.Once
	file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescData = file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDesc
)

func file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescGZIP() []byte {
	file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescOnce.Do(func() {
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescData)
	})
	return file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDescData
}

var file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_goTypes = []interface{}{
	(*GetTxRequest)(nil),             // 0: penumbra.util.tendermint_proxy.v1alpha1.GetTxRequest
	(*GetTxResponse)(nil),            // 1: penumbra.util.tendermint_proxy.v1alpha1.GetTxResponse
	(*TxResult)(nil),                 // 2: penumbra.util.tendermint_proxy.v1alpha1.TxResult
	(*Tag)(nil),                      // 3: penumbra.util.tendermint_proxy.v1alpha1.Tag
	(*BroadcastTxAsyncRequest)(nil),  // 4: penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxAsyncRequest
	(*BroadcastTxAsyncResponse)(nil), // 5: penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxAsyncResponse
	(*BroadcastTxSyncRequest)(nil),   // 6: penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxSyncRequest
	(*BroadcastTxSyncResponse)(nil),  // 7: penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxSyncResponse
	(*GetStatusRequest)(nil),         // 8: penumbra.util.tendermint_proxy.v1alpha1.GetStatusRequest
	(*GetStatusResponse)(nil),        // 9: penumbra.util.tendermint_proxy.v1alpha1.GetStatusResponse
	(*SyncInfo)(nil),                 // 10: penumbra.util.tendermint_proxy.v1alpha1.SyncInfo
	(*ABCIQueryRequest)(nil),         // 11: penumbra.util.tendermint_proxy.v1alpha1.ABCIQueryRequest
	(*ABCIQueryResponse)(nil),        // 12: penumbra.util.tendermint_proxy.v1alpha1.ABCIQueryResponse
	(*GetBlockByHeightRequest)(nil),  // 13: penumbra.util.tendermint_proxy.v1alpha1.GetBlockByHeightRequest
	(*GetBlockByHeightResponse)(nil), // 14: penumbra.util.tendermint_proxy.v1alpha1.GetBlockByHeightResponse
	(*p2p.DefaultNodeInfo)(nil),      // 15: tendermint.p2p.DefaultNodeInfo
	(*types.Validator)(nil),          // 16: tendermint.types.Validator
	(*timestamppb.Timestamp)(nil),    // 17: google.protobuf.Timestamp
	(*crypto.ProofOps)(nil),          // 18: tendermint.crypto.ProofOps
	(*types.BlockID)(nil),            // 19: tendermint.types.BlockID
	(*types.Block)(nil),              // 20: tendermint.types.Block
}
var file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_depIdxs = []int32{
	2,  // 0: penumbra.util.tendermint_proxy.v1alpha1.GetTxResponse.tx_result:type_name -> penumbra.util.tendermint_proxy.v1alpha1.TxResult
	3,  // 1: penumbra.util.tendermint_proxy.v1alpha1.TxResult.tags:type_name -> penumbra.util.tendermint_proxy.v1alpha1.Tag
	15, // 2: penumbra.util.tendermint_proxy.v1alpha1.GetStatusResponse.node_info:type_name -> tendermint.p2p.DefaultNodeInfo
	10, // 3: penumbra.util.tendermint_proxy.v1alpha1.GetStatusResponse.sync_info:type_name -> penumbra.util.tendermint_proxy.v1alpha1.SyncInfo
	16, // 4: penumbra.util.tendermint_proxy.v1alpha1.GetStatusResponse.validator_info:type_name -> tendermint.types.Validator
	17, // 5: penumbra.util.tendermint_proxy.v1alpha1.SyncInfo.latest_block_time:type_name -> google.protobuf.Timestamp
	18, // 6: penumbra.util.tendermint_proxy.v1alpha1.ABCIQueryResponse.proof_ops:type_name -> tendermint.crypto.ProofOps
	19, // 7: penumbra.util.tendermint_proxy.v1alpha1.GetBlockByHeightResponse.block_id:type_name -> tendermint.types.BlockID
	20, // 8: penumbra.util.tendermint_proxy.v1alpha1.GetBlockByHeightResponse.block:type_name -> tendermint.types.Block
	8,  // 9: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.GetStatus:input_type -> penumbra.util.tendermint_proxy.v1alpha1.GetStatusRequest
	4,  // 10: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.BroadcastTxAsync:input_type -> penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxAsyncRequest
	6,  // 11: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.BroadcastTxSync:input_type -> penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxSyncRequest
	0,  // 12: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.GetTx:input_type -> penumbra.util.tendermint_proxy.v1alpha1.GetTxRequest
	11, // 13: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.ABCIQuery:input_type -> penumbra.util.tendermint_proxy.v1alpha1.ABCIQueryRequest
	13, // 14: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.GetBlockByHeight:input_type -> penumbra.util.tendermint_proxy.v1alpha1.GetBlockByHeightRequest
	9,  // 15: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.GetStatus:output_type -> penumbra.util.tendermint_proxy.v1alpha1.GetStatusResponse
	5,  // 16: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.BroadcastTxAsync:output_type -> penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxAsyncResponse
	7,  // 17: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.BroadcastTxSync:output_type -> penumbra.util.tendermint_proxy.v1alpha1.BroadcastTxSyncResponse
	1,  // 18: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.GetTx:output_type -> penumbra.util.tendermint_proxy.v1alpha1.GetTxResponse
	12, // 19: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.ABCIQuery:output_type -> penumbra.util.tendermint_proxy.v1alpha1.ABCIQueryResponse
	14, // 20: penumbra.util.tendermint_proxy.v1alpha1.TendermintProxyService.GetBlockByHeight:output_type -> penumbra.util.tendermint_proxy.v1alpha1.GetBlockByHeightResponse
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_init() }
func file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_init() {
	if File_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastTxAsyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastTxAsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastTxSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastTxSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABCIQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABCIQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_goTypes,
		DependencyIndexes: file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_depIdxs,
		MessageInfos:      file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_msgTypes,
	}.Build()
	File_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto = out.File
	file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_rawDesc = nil
	file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_goTypes = nil
	file_penumbra_util_tendermint_proxy_v1alpha1_tendermint_proxy_proto_depIdxs = nil
}
