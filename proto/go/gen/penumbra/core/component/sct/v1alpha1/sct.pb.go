// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: penumbra/core/component/sct/v1alpha1/sct.proto

package sctv1alpha1

import (
	v1alpha1 "github.com/penumbra-zone/penumbra/proto/go/gen/penumbra/crypto/tct/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Metadata describing the source of a commitment in the state commitment tree.
//
// This message allows clients to track provenance of state commitments, and to
// decide whether or not to download block data.
type CommitmentSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*CommitmentSource_Transaction_
	//	*CommitmentSource_Ics_20Transfer
	//	*CommitmentSource_FundingStreamReward_
	//	*CommitmentSource_CommunityPoolOutput_
	//	*CommitmentSource_Genesis_
	Source isCommitmentSource_Source `protobuf_oneof:"source"`
}

func (x *CommitmentSource) Reset() {
	*x = CommitmentSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSource) ProtoMessage() {}

func (x *CommitmentSource) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSource.ProtoReflect.Descriptor instead.
func (*CommitmentSource) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{0}
}

func (m *CommitmentSource) GetSource() isCommitmentSource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *CommitmentSource) GetTransaction() *CommitmentSource_Transaction {
	if x, ok := x.GetSource().(*CommitmentSource_Transaction_); ok {
		return x.Transaction
	}
	return nil
}

func (x *CommitmentSource) GetIcs_20Transfer() *CommitmentSource_Ics20Transfer {
	if x, ok := x.GetSource().(*CommitmentSource_Ics_20Transfer); ok {
		return x.Ics_20Transfer
	}
	return nil
}

func (x *CommitmentSource) GetFundingStreamReward() *CommitmentSource_FundingStreamReward {
	if x, ok := x.GetSource().(*CommitmentSource_FundingStreamReward_); ok {
		return x.FundingStreamReward
	}
	return nil
}

func (x *CommitmentSource) GetCommunityPoolOutput() *CommitmentSource_CommunityPoolOutput {
	if x, ok := x.GetSource().(*CommitmentSource_CommunityPoolOutput_); ok {
		return x.CommunityPoolOutput
	}
	return nil
}

func (x *CommitmentSource) GetGenesis() *CommitmentSource_Genesis {
	if x, ok := x.GetSource().(*CommitmentSource_Genesis_); ok {
		return x.Genesis
	}
	return nil
}

type isCommitmentSource_Source interface {
	isCommitmentSource_Source()
}

type CommitmentSource_Transaction_ struct {
	Transaction *CommitmentSource_Transaction `protobuf:"bytes,1,opt,name=transaction,proto3,oneof"`
}

type CommitmentSource_Ics_20Transfer struct {
	Ics_20Transfer *CommitmentSource_Ics20Transfer `protobuf:"bytes,2,opt,name=ics_20_transfer,json=ics20Transfer,proto3,oneof"`
}

type CommitmentSource_FundingStreamReward_ struct {
	FundingStreamReward *CommitmentSource_FundingStreamReward `protobuf:"bytes,20,opt,name=funding_stream_reward,json=fundingStreamReward,proto3,oneof"`
}

type CommitmentSource_CommunityPoolOutput_ struct {
	CommunityPoolOutput *CommitmentSource_CommunityPoolOutput `protobuf:"bytes,30,opt,name=community_pool_output,json=communityPoolOutput,proto3,oneof"`
}

type CommitmentSource_Genesis_ struct {
	Genesis *CommitmentSource_Genesis `protobuf:"bytes,40,opt,name=genesis,proto3,oneof"`
}

func (*CommitmentSource_Transaction_) isCommitmentSource_Source() {}

func (*CommitmentSource_Ics_20Transfer) isCommitmentSource_Source() {}

func (*CommitmentSource_FundingStreamReward_) isCommitmentSource_Source() {}

func (*CommitmentSource_CommunityPoolOutput_) isCommitmentSource_Source() {}

func (*CommitmentSource_Genesis_) isCommitmentSource_Source() {}

type Nullifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []byte `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *Nullifier) Reset() {
	*x = Nullifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nullifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nullifier) ProtoMessage() {}

func (x *Nullifier) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nullifier.ProtoReflect.Descriptor instead.
func (*Nullifier) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{1}
}

func (x *Nullifier) GetInner() []byte {
	if x != nil {
		return x.Inner
	}
	return nil
}

// Records information about what transaction spent a nullifier.
type NullificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SpendHeight uint64 `protobuf:"varint,2,opt,name=spend_height,json=spendHeight,proto3" json:"spend_height,omitempty"`
}

func (x *NullificationInfo) Reset() {
	*x = NullificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullificationInfo) ProtoMessage() {}

func (x *NullificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullificationInfo.ProtoReflect.Descriptor instead.
func (*NullificationInfo) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{2}
}

func (x *NullificationInfo) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *NullificationInfo) GetSpendHeight() uint64 {
	if x != nil {
		return x.SpendHeight
	}
	return 0
}

// Event recording a new commitment added to the SCT.
type EventCommitment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commitment *v1alpha1.StateCommitment `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	Position   uint64                    `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	Source     *CommitmentSource         `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *EventCommitment) Reset() {
	*x = EventCommitment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCommitment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCommitment) ProtoMessage() {}

func (x *EventCommitment) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCommitment.ProtoReflect.Descriptor instead.
func (*EventCommitment) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{3}
}

func (x *EventCommitment) GetCommitment() *v1alpha1.StateCommitment {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *EventCommitment) GetPosition() uint64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *EventCommitment) GetSource() *CommitmentSource {
	if x != nil {
		return x.Source
	}
	return nil
}

// Event recording an SCT anchor (global root).
type EventAnchor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anchor *v1alpha1.MerkleRoot `protobuf:"bytes,1,opt,name=anchor,proto3" json:"anchor,omitempty"`
	Height uint64               `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *EventAnchor) Reset() {
	*x = EventAnchor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAnchor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAnchor) ProtoMessage() {}

func (x *EventAnchor) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAnchor.ProtoReflect.Descriptor instead.
func (*EventAnchor) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{4}
}

func (x *EventAnchor) GetAnchor() *v1alpha1.MerkleRoot {
	if x != nil {
		return x.Anchor
	}
	return nil
}

func (x *EventAnchor) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// Event recording an SCT epoch root.
type EventEpochRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root  *v1alpha1.MerkleRoot `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Index uint64               `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *EventEpochRoot) Reset() {
	*x = EventEpochRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEpochRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEpochRoot) ProtoMessage() {}

func (x *EventEpochRoot) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEpochRoot.ProtoReflect.Descriptor instead.
func (*EventEpochRoot) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{5}
}

func (x *EventEpochRoot) GetRoot() *v1alpha1.MerkleRoot {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *EventEpochRoot) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

// Event recording an SCT block root.
type EventBlockRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root   *v1alpha1.MerkleRoot `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Height uint64               `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *EventBlockRoot) Reset() {
	*x = EventBlockRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBlockRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBlockRoot) ProtoMessage() {}

func (x *EventBlockRoot) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBlockRoot.ProtoReflect.Descriptor instead.
func (*EventBlockRoot) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{6}
}

func (x *EventBlockRoot) GetRoot() *v1alpha1.MerkleRoot {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *EventBlockRoot) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// The state commitment was included in the genesis state.
type CommitmentSource_Genesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitmentSource_Genesis) Reset() {
	*x = CommitmentSource_Genesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSource_Genesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSource_Genesis) ProtoMessage() {}

func (x *CommitmentSource_Genesis) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSource_Genesis.ProtoReflect.Descriptor instead.
func (*CommitmentSource_Genesis) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{0, 0}
}

// The commitment was created by a transaction.
//
// When included in a `CompactBlock` via a `StatePayload`, the transaction source is "dehydrated"
// by stripping the `id` field and putting empty bytes in its place.  When clients perform extended
// transaction fetch, they should match up transaction hashes to "rehydrate" the source info.
type CommitmentSource_Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction ID, if specified.
	//
	// This field may be omitted to save space, and should not be required to be present.
	// If the bytes are missing, the message should be interpreted as "Transaction (Unknown)".
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommitmentSource_Transaction) Reset() {
	*x = CommitmentSource_Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSource_Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSource_Transaction) ProtoMessage() {}

func (x *CommitmentSource_Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSource_Transaction.ProtoReflect.Descriptor instead.
func (*CommitmentSource_Transaction) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CommitmentSource_Transaction) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

// The commitment was created through a validator's funding stream.
type CommitmentSource_FundingStreamReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The epoch index the rewards were issued in.
	EpochIndex uint64 `protobuf:"varint,1,opt,name=epoch_index,json=epochIndex,proto3" json:"epoch_index,omitempty"`
}

func (x *CommitmentSource_FundingStreamReward) Reset() {
	*x = CommitmentSource_FundingStreamReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSource_FundingStreamReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSource_FundingStreamReward) ProtoMessage() {}

func (x *CommitmentSource_FundingStreamReward) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSource_FundingStreamReward.ProtoReflect.Descriptor instead.
func (*CommitmentSource_FundingStreamReward) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CommitmentSource_FundingStreamReward) GetEpochIndex() uint64 {
	if x != nil {
		return x.EpochIndex
	}
	return 0
}

// The commitment was created through a `CommunityPoolOutput` in a governance-initated transaction.
type CommitmentSource_CommunityPoolOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitmentSource_CommunityPoolOutput) Reset() {
	*x = CommitmentSource_CommunityPoolOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSource_CommunityPoolOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSource_CommunityPoolOutput) ProtoMessage() {}

func (x *CommitmentSource_CommunityPoolOutput) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSource_CommunityPoolOutput.ProtoReflect.Descriptor instead.
func (*CommitmentSource_CommunityPoolOutput) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{0, 3}
}

// The commitment was created by an inbound ICS20 transfer.
type CommitmentSource_Ics20Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The sequence number of the packet that triggered the transfer
	PacketSeq uint64 `protobuf:"varint,1,opt,name=packet_seq,json=packetSeq,proto3" json:"packet_seq,omitempty"`
	// The channel id the transfer happened on
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// The sender address on the counterparty chain
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *CommitmentSource_Ics20Transfer) Reset() {
	*x = CommitmentSource_Ics20Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitmentSource_Ics20Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitmentSource_Ics20Transfer) ProtoMessage() {}

func (x *CommitmentSource_Ics20Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitmentSource_Ics20Transfer.ProtoReflect.Descriptor instead.
func (*CommitmentSource_Ics20Transfer) Descriptor() ([]byte, []int) {
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CommitmentSource_Ics20Transfer) GetPacketSeq() uint64 {
	if x != nil {
		return x.PacketSeq
	}
	return 0
}

func (x *CommitmentSource_Ics20Transfer) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CommitmentSource_Ics20Transfer) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

var File_penumbra_core_component_sct_v1alpha1_sct_proto protoreflect.FileDescriptor

var file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x63, 0x74, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x24, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x26, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61,
	0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x74, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6,
	0x06, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d,
	0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6e, 0x0a, 0x0f, 0x69,
	0x63, 0x73, 0x5f, 0x32, 0x30, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x49, 0x63, 0x73,
	0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x63,
	0x73, 0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x80, 0x01, 0x0a, 0x15,
	0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x13, 0x66, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x80,
	0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x5a, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x1a, 0x09, 0x0a,
	0x07, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x1a, 0x1d, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x36, 0x0a, 0x13, 0x46, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a,
	0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a, 0x65, 0x0a, 0x0d, 0x49, 0x63, 0x73, 0x32, 0x30, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x08, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x4e, 0x75, 0x6c, 0x6c, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x11, 0x4e, 0x75,
	0x6c, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4e, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x67, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x12, 0x40, 0x0a, 0x06, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x74, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x06, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x64, 0x0a, 0x0e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x3c, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x65, 0x6e,
	0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x66, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x74, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0x0e, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0xca, 0x02, 0x0a, 0x28, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x08, 0x53, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2d, 0x7a, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x63, 0x74, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x73, 0x63, 0x74, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xa2, 0x02, 0x04, 0x50, 0x43, 0x43, 0x53, 0xaa, 0x02, 0x24, 0x50, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x74, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xca, 0x02, 0x24, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5c, 0x43, 0x6f, 0x72, 0x65,
	0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5c, 0x53, 0x63, 0x74, 0x5c, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x30, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x72, 0x61, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5c, 0x53, 0x63, 0x74, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x28, 0x50, 0x65, 0x6e,
	0x75, 0x6d, 0x62, 0x72, 0x61, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x53, 0x63, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescOnce sync.Once
	file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescData = file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDesc
)

func file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescGZIP() []byte {
	file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescOnce.Do(func() {
		file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescData = protoimpl.X.CompressGZIP(file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescData)
	})
	return file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDescData
}

var file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_penumbra_core_component_sct_v1alpha1_sct_proto_goTypes = []interface{}{
	(*CommitmentSource)(nil),                     // 0: penumbra.core.component.sct.v1alpha1.CommitmentSource
	(*Nullifier)(nil),                            // 1: penumbra.core.component.sct.v1alpha1.Nullifier
	(*NullificationInfo)(nil),                    // 2: penumbra.core.component.sct.v1alpha1.NullificationInfo
	(*EventCommitment)(nil),                      // 3: penumbra.core.component.sct.v1alpha1.EventCommitment
	(*EventAnchor)(nil),                          // 4: penumbra.core.component.sct.v1alpha1.EventAnchor
	(*EventEpochRoot)(nil),                       // 5: penumbra.core.component.sct.v1alpha1.EventEpochRoot
	(*EventBlockRoot)(nil),                       // 6: penumbra.core.component.sct.v1alpha1.EventBlockRoot
	(*CommitmentSource_Genesis)(nil),             // 7: penumbra.core.component.sct.v1alpha1.CommitmentSource.Genesis
	(*CommitmentSource_Transaction)(nil),         // 8: penumbra.core.component.sct.v1alpha1.CommitmentSource.Transaction
	(*CommitmentSource_FundingStreamReward)(nil), // 9: penumbra.core.component.sct.v1alpha1.CommitmentSource.FundingStreamReward
	(*CommitmentSource_CommunityPoolOutput)(nil), // 10: penumbra.core.component.sct.v1alpha1.CommitmentSource.CommunityPoolOutput
	(*CommitmentSource_Ics20Transfer)(nil),       // 11: penumbra.core.component.sct.v1alpha1.CommitmentSource.Ics20Transfer
	(*v1alpha1.StateCommitment)(nil),             // 12: penumbra.crypto.tct.v1alpha1.StateCommitment
	(*v1alpha1.MerkleRoot)(nil),                  // 13: penumbra.crypto.tct.v1alpha1.MerkleRoot
}
var file_penumbra_core_component_sct_v1alpha1_sct_proto_depIdxs = []int32{
	8,  // 0: penumbra.core.component.sct.v1alpha1.CommitmentSource.transaction:type_name -> penumbra.core.component.sct.v1alpha1.CommitmentSource.Transaction
	11, // 1: penumbra.core.component.sct.v1alpha1.CommitmentSource.ics_20_transfer:type_name -> penumbra.core.component.sct.v1alpha1.CommitmentSource.Ics20Transfer
	9,  // 2: penumbra.core.component.sct.v1alpha1.CommitmentSource.funding_stream_reward:type_name -> penumbra.core.component.sct.v1alpha1.CommitmentSource.FundingStreamReward
	10, // 3: penumbra.core.component.sct.v1alpha1.CommitmentSource.community_pool_output:type_name -> penumbra.core.component.sct.v1alpha1.CommitmentSource.CommunityPoolOutput
	7,  // 4: penumbra.core.component.sct.v1alpha1.CommitmentSource.genesis:type_name -> penumbra.core.component.sct.v1alpha1.CommitmentSource.Genesis
	12, // 5: penumbra.core.component.sct.v1alpha1.EventCommitment.commitment:type_name -> penumbra.crypto.tct.v1alpha1.StateCommitment
	0,  // 6: penumbra.core.component.sct.v1alpha1.EventCommitment.source:type_name -> penumbra.core.component.sct.v1alpha1.CommitmentSource
	13, // 7: penumbra.core.component.sct.v1alpha1.EventAnchor.anchor:type_name -> penumbra.crypto.tct.v1alpha1.MerkleRoot
	13, // 8: penumbra.core.component.sct.v1alpha1.EventEpochRoot.root:type_name -> penumbra.crypto.tct.v1alpha1.MerkleRoot
	13, // 9: penumbra.core.component.sct.v1alpha1.EventBlockRoot.root:type_name -> penumbra.crypto.tct.v1alpha1.MerkleRoot
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_penumbra_core_component_sct_v1alpha1_sct_proto_init() }
func file_penumbra_core_component_sct_v1alpha1_sct_proto_init() {
	if File_penumbra_core_component_sct_v1alpha1_sct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nullifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCommitment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAnchor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEpochRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBlockRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSource_Genesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSource_Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSource_FundingStreamReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSource_CommunityPoolOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitmentSource_Ics20Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CommitmentSource_Transaction_)(nil),
		(*CommitmentSource_Ics_20Transfer)(nil),
		(*CommitmentSource_FundingStreamReward_)(nil),
		(*CommitmentSource_CommunityPoolOutput_)(nil),
		(*CommitmentSource_Genesis_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_penumbra_core_component_sct_v1alpha1_sct_proto_goTypes,
		DependencyIndexes: file_penumbra_core_component_sct_v1alpha1_sct_proto_depIdxs,
		MessageInfos:      file_penumbra_core_component_sct_v1alpha1_sct_proto_msgTypes,
	}.Build()
	File_penumbra_core_component_sct_v1alpha1_sct_proto = out.File
	file_penumbra_core_component_sct_v1alpha1_sct_proto_rawDesc = nil
	file_penumbra_core_component_sct_v1alpha1_sct_proto_goTypes = nil
	file_penumbra_core_component_sct_v1alpha1_sct_proto_depIdxs = nil
}
