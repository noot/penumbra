// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: penumbra/core/txhash/v1alpha1/txhash.proto

package txhashv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The hash of a Penumbra transaction's _effecting data_, describing the effects
// of the transaction on the chain state.
type EffectHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []byte `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *EffectHash) Reset() {
	*x = EffectHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EffectHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EffectHash) ProtoMessage() {}

func (x *EffectHash) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EffectHash.ProtoReflect.Descriptor instead.
func (*EffectHash) Descriptor() ([]byte, []int) {
	return file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescGZIP(), []int{0}
}

func (x *EffectHash) GetInner() []byte {
	if x != nil {
		return x.Inner
	}
	return nil
}

// A transaction ID, the Sha256 hash of a transaction.
//
// This is the hash of the plain byte encoding, used by Tendermint.
type TransactionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []byte `protobuf:"bytes,1,opt,name=inner,proto3" json:"inner,omitempty"`
}

func (x *TransactionId) Reset() {
	*x = TransactionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionId) ProtoMessage() {}

func (x *TransactionId) ProtoReflect() protoreflect.Message {
	mi := &file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionId.ProtoReflect.Descriptor instead.
func (*TransactionId) Descriptor() ([]byte, []int) {
	return file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionId) GetInner() []byte {
	if x != nil {
		return x.Inner
	}
	return nil
}

var File_penumbra_core_txhash_v1alpha1_txhash_proto protoreflect.FileDescriptor

var file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x74, 0x78, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x70, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x68, 0x61,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x22, 0x0a, 0x0a, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22,
	0x25, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0xa4, 0x02, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x78, 0x68,
	0x61, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0b, 0x54, 0x78,
	0x68, 0x61, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61,
	0x2d, 0x7a, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x72, 0x61, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x74, 0x78, 0x68, 0x61, 0x73, 0x68,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x43, 0x54, 0xaa, 0x02,
	0x1d, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02,
	0x1d, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x54,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02,
	0x29, 0x50, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x61, 0x5c, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x54,
	0x78, 0x68, 0x61, 0x73, 0x68, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x50, 0x65, 0x6e,
	0x75, 0x6d, 0x62, 0x72, 0x61, 0x3a, 0x3a, 0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x54, 0x78, 0x68,
	0x61, 0x73, 0x68, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescOnce sync.Once
	file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescData = file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDesc
)

func file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescGZIP() []byte {
	file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescOnce.Do(func() {
		file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescData = protoimpl.X.CompressGZIP(file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescData)
	})
	return file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDescData
}

var file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_penumbra_core_txhash_v1alpha1_txhash_proto_goTypes = []interface{}{
	(*EffectHash)(nil),    // 0: penumbra.core.txhash.v1alpha1.EffectHash
	(*TransactionId)(nil), // 1: penumbra.core.txhash.v1alpha1.TransactionId
}
var file_penumbra_core_txhash_v1alpha1_txhash_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_penumbra_core_txhash_v1alpha1_txhash_proto_init() }
func file_penumbra_core_txhash_v1alpha1_txhash_proto_init() {
	if File_penumbra_core_txhash_v1alpha1_txhash_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EffectHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_penumbra_core_txhash_v1alpha1_txhash_proto_goTypes,
		DependencyIndexes: file_penumbra_core_txhash_v1alpha1_txhash_proto_depIdxs,
		MessageInfos:      file_penumbra_core_txhash_v1alpha1_txhash_proto_msgTypes,
	}.Build()
	File_penumbra_core_txhash_v1alpha1_txhash_proto = out.File
	file_penumbra_core_txhash_v1alpha1_txhash_proto_rawDesc = nil
	file_penumbra_core_txhash_v1alpha1_txhash_proto_goTypes = nil
	file_penumbra_core_txhash_v1alpha1_txhash_proto_depIdxs = nil
}
